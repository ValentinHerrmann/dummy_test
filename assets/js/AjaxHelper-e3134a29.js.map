{"version":3,"file":"AjaxHelper-e3134a29.js","sources":["../../../src/client/communication/pushclient/PushClientStrategy.ts","../../../src/client/communication/pushclient/PushClientLongPollingStrategy.ts","../../../src/client/communication/pushclient/PushClientWebsocketStrategy.ts","../../../src/client/communication/pushclient/BasePushClientManager.ts","../../../src/client/communication/pushclient/PushClientManager.ts","../../../src/client/communication/AjaxHelper.ts"],"sourcesContent":["import { BasePushClientManager } from \"./BasePushClientManager.js\";\r\n\r\nexport abstract class PushClientStrategy {\r\n\r\n    nextStrategy: PushClientStrategy;\r\n\r\n    constructor(public name: string, public manager: BasePushClientManager){\r\n\r\n    }\r\n\r\n    abstract open(): void;\r\n\r\n    abstract close();\r\n\r\n}\r\n","import { csrfToken } from \"../AjaxHelper\";\r\nimport { BasePushClientManager } from \"./BasePushClientManager.js\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\n\r\nexport class PushClientLongPollingStrategy extends PushClientStrategy {\r\n\r\n    isClosed: boolean;\r\n    csrfToken: string;\r\n\r\n    shortestTimeoutMs: number = 60000;   // 60 s\r\n    timeOpened: number = null;\r\n\r\n    abortController: AbortController;\r\n\r\n\r\n\r\n    constructor(manager: BasePushClientManager) {\r\n        super(\"long-polling strategy\", manager);\r\n        this.isClosed = false;\r\n    }\r\n\r\n    open(): void {\r\n\r\n        this.isClosed = false;\r\n\r\n        this.abortController = new AbortController();\r\n\r\n        this.timeOpened = performance.now();\r\n\r\n        let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n        headers.push([\"x-token-pm\", csrfToken]);\r\n        this.csrfToken = csrfToken;\r\n        headers.push([\"x-timeout\", this.shortestTimeoutMs + \"\"]);\r\n\r\n        try {\r\n            fetch(\"/servlet/registerLongpollingListener\", {\r\n                signal: this.abortController.signal,\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify({})\r\n            }).then((response) => {\r\n\r\n                if (response.status != 200) {\r\n                    console.log(`Long-polling listener got http-status: ${response.status} (${response.statusText})`);\r\n                    let timeMs = Math.round(performance.now() - this.timeOpened) - 4000;\r\n                    if (timeMs < this.shortestTimeoutMs) this.shortestTimeoutMs = timeMs;\r\n                }\r\n\r\n                switch (response.status) {\r\n                    case 200:\r\n                        response.json().then(data => {\r\n                            this.manager.onMessage(data)\r\n                        });\r\n                        this.reopen();\r\n                        break;\r\n                    case 502:   // timeout!\r\n                    case 504:   // gateway timeout!\r\n                        this.reopen(1000, false);\r\n                        break;\r\n                    case 401:\r\n                        console.log(\"PushClientLongPollingStrategy: Got http status code 401, therefore stopping.\");\r\n                        break;\r\n                    default:\r\n                        this.reopen(10000, false);\r\n                        break;\r\n                }\r\n\r\n            }).catch((reason) => {\r\n                console.log(`Long-polling listener failed due to reason: ${reason}`);\r\n                this.reopen(10000, false);\r\n            }).finally(() => {\r\n                this.abortController = null;\r\n            })\r\n\r\n        } catch (ex) {\r\n            this.reopen(10000, false);\r\n        }\r\n\r\n    }\r\n\r\n    reopen(timeout: number = 500, silently: boolean = true) {\r\n        if (this.isClosed) return;\r\n        if(timeout > 500){\r\n            console.log(`Reopen long-polling listener in ${timeout / 1000} seconds...`);\r\n        }\r\n        setTimeout(() => {\r\n            if (this.isClosed) return;\r\n            this.open();\r\n        }, timeout);\r\n\r\n    }\r\n\r\n\r\n    async close() {\r\n        this.isClosed = true;\r\n        this.abortController?.abort();\r\n\r\n        let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n        headers.push([\"x-token-pm\", this.csrfToken]);\r\n\r\n        await fetch(\"/servlet/unregisterLongpollingListener\", {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({})\r\n        })\r\n    }\r\n\r\n}","import { csrfToken } from \"../AjaxHelper\";\r\nimport { BasePushClientManager, ServerSentMessage } from \"./BasePushClientManager.js\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\n\r\nexport class PushClientWebsocketStrategy extends PushClientStrategy {\r\n\r\n    csrfToken: string;\r\n\r\n    websocket: WebSocket;\r\n\r\n    isClosed: boolean;\r\n\r\n    openedTimestamp: number;\r\n\r\n    currentTimer: any;\r\n\r\n    constructor(manager: BasePushClientManager) {\r\n        super(\"websocket strategy\", manager);\r\n    }\r\n\r\n    open(): void {\r\n\r\n        this.isClosed = false;\r\n\r\n        try {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/pushWebsocket?csrfToken=\" + csrfToken;\r\n\r\n            this.websocket = new WebSocket(url);\r\n    \r\n            this.websocket.onopen = (event) => {\r\n                this.openedTimestamp = performance.now();\r\n            }\r\n    \r\n            this.websocket.onclose = (event) => {\r\n                console.log(\"Websocket has been closed, code: \" + event.code + \", reason: \" + event.reason);\r\n\r\n                this.isClosed = true;\r\n                \r\n                if(event.code == 1001 && performance.now() - this.openedTimestamp > 1e4){\r\n                    // timeout? => reopen\r\n                    console.log(\"Reason was timeout, dt > 10s => Reopen!\");\r\n                    this.open();\r\n                } else {\r\n                    this.manager.onStrategyFailed(this);\r\n                    this.isClosed = true;\r\n                }\r\n                \r\n            }\r\n    \r\n            this.websocket.onerror = (event) => { \r\n                console.log(\"Error on websocket, type: \" + event.type);\r\n                this.websocket.close();\r\n                this.manager.onStrategyFailed(this);\r\n                this.isClosed = true;\r\n            }\r\n    \r\n            this.websocket.onmessage = (event) => {\r\n                if(event.data == \"pong\") return;\r\n                const msg: ServerSentMessage[] = JSON.parse(event.data);\r\n                this.manager.onMessage(msg);\r\n            }\r\n\r\n            if(this.currentTimer != null){\r\n                clearTimeout(this.currentTimer);\r\n            }\r\n\r\n            this.doPing();\r\n\r\n        } catch (ex){\r\n            this.manager.onStrategyFailed(this);\r\n            this.isClosed = true;\r\n        }\r\n\r\n    }\r\n\r\n    doPing(){\r\n        this.currentTimer = setTimeout(() => {\r\n            if(!this.isClosed){\r\n                this.websocket.send(\"ping\");\r\n                this.doPing();\r\n            } else {\r\n                this.currentTimer = null;\r\n            }            \r\n        }, 25000);\r\n\r\n    }\r\n\r\n\r\n    async close() {\r\n        this.isClosed = true;\r\n        this.websocket.close();\r\n    }\r\n\r\n}","import { PushClientLongPollingStrategy } from \"./PushClientLongPollingStrategy\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\nimport { PushClientWebsocketStrategy } from \"./PushClientWebsocketStrategy\";\r\n\r\nexport type PushEventType = \"startPruefung\" | \"stopPruefung\" | \"doFileUpdate\" | \"broadcastDatabaseChange\" | \"checkIfAlive\" | \"close\" | \"onPruefungChanged\"\r\n                     | \"onGradeChangedInPruefungAdministration\"| \"onGradeChangedInMainWindow\" | \"onOpen\" | \"keepAlive\";\r\n\r\nexport type ServerSentMessage = {eventType: PushEventType, data?: any};\r\n\r\nexport type PushMessageHandler = (data: any) => void;\r\n\r\nexport type PushSubscriberInfo = {\r\n    eventType: PushEventType;\r\n    handler: PushMessageHandler;\r\n}\r\n\r\nexport class BasePushClientManager {\r\n\r\n    strategies: PushClientStrategy[] = [];\r\n    currentStrategy: PushClientStrategy;\r\n\r\n    eventTypeToSubscriberInfoMap: Map<string, PushSubscriberInfo> = new Map();\r\n\r\n    public subscribe(eventType: PushEventType, handler: PushMessageHandler) {\r\n        this.eventTypeToSubscriberInfoMap.set(eventType, { eventType: eventType, handler: handler });\r\n    }\r\n    \r\n    public unsubscribe(eventType: PushEventType){\r\n        this.eventTypeToSubscriberInfoMap.delete(eventType);\r\n    }\r\n\r\n\r\n    protected constructor(public baseURL: string){\r\n        this.strategies = [\r\n            new PushClientWebsocketStrategy(this),\r\n            new PushClientLongPollingStrategy(this),\r\n        ]\r\n\r\n        for(let i = this.strategies.length - 2; i >= 0; i--){\r\n            this.strategies[i].nextStrategy = this.strategies[i+1];\r\n        }\r\n    }\r\n\r\n    open(){\r\n        if(this.currentStrategy == null){\r\n            this.currentStrategy = this.strategies[0];\r\n            console.log(`Opening ${this.currentStrategy.name}`);\r\n            this.currentStrategy.open();\r\n        }\r\n    }\r\n\r\n    onMessage(messages: ServerSentMessage[]){\r\n\r\n        for(let message of messages){            \r\n            if(message.eventType == \"keepAlive\") return;\r\n    \r\n            this.eventTypeToSubscriberInfoMap.get(message.eventType)?.handler(message.data);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onStrategyFailed(failedStrategy: PushClientStrategy){\r\n        if(failedStrategy != this.currentStrategy) return;\r\n\r\n        let oldStrategy = this.currentStrategy;\r\n        this.currentStrategy = this.currentStrategy.nextStrategy;\r\n\r\n        let text: string = `${oldStrategy.name} failed. `;\r\n\r\n        if(this.currentStrategy != null){\r\n                text += `=> Trying ${this.currentStrategy.name} in 3 seconds...`;\r\n            setTimeout(() => {\r\n                console.log(`Opening ${this.currentStrategy.name}`);\r\n                this.currentStrategy.open();                \r\n            }, 3000);\r\n        } else {\r\n            text += `It was the last resort, unfortunately this client has no means to receive push-messages from server.`;\r\n        }\r\n\r\n        console.log(text);\r\n\r\n    }\r\n\r\n    close() {\r\n        if(this.currentStrategy != null){\r\n            this.currentStrategy.close();\r\n            this.currentStrategy = null;\r\n        }\r\n    }\r\n\r\n\r\n}","import { BasePushClientManager, PushEventType, PushMessageHandler } from \"./BasePushClientManager.js\";\r\n\r\n\r\nexport class PushClientManager extends BasePushClientManager {\r\n\r\n    private static instance: PushClientManager;\r\n\r\n\r\n    public static subscribe(eventType: PushEventType, handler: PushMessageHandler) {\r\n        PushClientManager.getInstance().subscribe(eventType, handler);\r\n    }\r\n    \r\n    public static unsubscribe(eventType: PushEventType){\r\n        PushClientManager.getInstance().unsubscribe(eventType);\r\n    }\r\n\r\n\r\n    public static getInstance(): PushClientManager {\r\n        if(PushClientManager.instance == null){\r\n            PushClientManager.instance = new PushClientManager(\"\");\r\n        }\r\n        return PushClientManager.instance;\r\n    }\r\n\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\nimport jQuery from 'jquery';\r\nimport { PushClientManager } from \"./pushclient/PushClientManager.js\";\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport var csrfToken: string = \"\";\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    let headers: {[key: string]: string;} = {};\r\n    if(csrfToken != null) headers = {\"x-token-pm\": csrfToken};\r\n\r\n    jQuery.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        headers: headers,\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            if(response[\"csrfToken\"] != null)\r\n            {\r\n                csrfToken = response[\"csrfToken\"];\r\n                PushClientManager.getInstance().open();\r\n            }\r\n            \r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\nexport async function extractCsrfTokenFromGetRequest(retrieveNewCsrfToken: boolean = false){\r\n    let url = window.location.href;\r\n    let tokenIndex = url.indexOf(\"csrfToken=\");\r\n    if(tokenIndex >= 0){\r\n        let token = url.substring(tokenIndex + \"csrfToken=\".length);\r\n        if(token != null && token.length > 0){\r\n            csrfToken = token;\r\n        }\r\n    }\r\n\r\n    if(retrieveNewCsrfToken){\r\n        await ajaxAsync(\"/servlet/retrieveNewCsrfToken\", {});\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function ajaxAsync(url: string, data: any): Promise<any>{\r\n    let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n    if(csrfToken != null){\r\n        headers.push([\"x-token-pm\", csrfToken]);\r\n    }\r\n\r\n    try {\r\n        let response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n         let obj: any = await response.json()\r\n\r\n        if(obj[\"token\"] != null){\r\n            csrfToken = obj[\"token\"];\r\n            PushClientManager.getInstance().open();\r\n        }\r\n\r\n        if(obj == null){\r\n            alert(\"Fehler beim Übertragen der Daten.\");             \r\n        } else if(obj.success != true){\r\n            alert(\"Fehler beim Übertragen der Daten:\\n\" + obj.message);             \r\n        }\r\n\r\n        return obj;\r\n    } catch (exception){\r\n        return {\r\n            status: \"Error\",\r\n            message: \"Es ist ein Fehler aufgetreten: \" + exception\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"],"names":["PushClientStrategy","name","manager","__publicField","PushClientLongPollingStrategy","headers","csrfToken","response","timeMs","data","reason","timeout","silently","_a","PushClientWebsocketStrategy","url","event","msg","BasePushClientManager","baseURL","i","eventType","handler","messages","message","failedStrategy","oldStrategy","text","_PushClientManager","PushClientManager","_PerformanceCollector","startTime","pe","dt","request","ajax","PerformanceCollector","successCallback","errorCallback","showNetworkBusy","time","jQuery","error","jqXHR","statusText","busy","extractCsrfTokenFromGetRequest","retrieveNewCsrfToken","tokenIndex","token","ajaxAsync","obj","exception"],"mappings":"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"}