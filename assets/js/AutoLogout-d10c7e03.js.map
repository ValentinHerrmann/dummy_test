{"version":3,"file":"AutoLogout-d10c7e03.js","sources":["../../../src/client/communication/Data.ts","../../../src/client/main/AutoLogout.ts"],"sourcesContent":["import { Klass } from \"../compiler/types/Class.js\"\r\nimport { SerializedClassDiagram } from \"../main/gui/diagrams/classdiagram/ClassDiagram.js\"\r\n\r\nexport interface BaseResponse {\r\n    success: boolean;\r\n    message: string;\r\n}\r\n\r\nexport type UserSettings = {\r\n    helperHistory: {\r\n        newWorkspaceHelperDone: boolean,\r\n        newFileHelperDone: boolean,\r\n        speedControlHelperDone: boolean,\r\n        consoleHelperDone: boolean,\r\n        homeButtonHelperDone: boolean,\r\n        stepButtonHelperDone: boolean,\r\n        repositoryButtonDone: boolean,\r\n        folderButtonDone: boolean\r\n    },\r\n    //    theme: string,  // old!\r\n    viewModes: ViewModes,\r\n    classDiagram: SerializedClassDiagram\r\n}\r\n\r\nexport type ViewModes = {\r\n    presentation: ViewMode;\r\n    monitor: ViewMode;\r\n    viewModeChosen: \"presentation\" | \"monitor\"\r\n}\r\n\r\nexport type ViewMode = {\r\n    theme: string;\r\n    fontSize: number;\r\n    highContrast: boolean;\r\n}\r\n\r\n\r\nexport type WorkspaceSettings = {\r\n    libraries: string[]\r\n}\r\n\r\nexport type FileData = {\r\n    name: string,\r\n    id: number,\r\n    text: string,\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n    version: number,\r\n    workspace_id: number,\r\n    forceUpdate: boolean,\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean\r\n}\r\n\r\nexport type WorkspaceData = {\r\n    name: string,\r\n    path: string,\r\n    isFolder: boolean,\r\n    id: number,\r\n    owner_id: number,\r\n    files: FileData[],\r\n    currentFileId: number,\r\n    settings?: string,       // serialized WorkspaceSettings\r\n\r\n    version: number,\r\n    repository_id: number,    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean, // true if owner of this working copy has write permission to repository workspace\r\n\r\n    pruefung_id: number,\r\n    readonly: boolean,\r\n\r\n    spritesheet_id: number,\r\n\r\n    grade?: string,\r\n    points?: string,\r\n    comment?: string,\r\n    attended_exam?: boolean\r\n}\r\n\r\nexport type Workspaces = {\r\n    workspaces: WorkspaceData[]\r\n}\r\n\r\n\r\nexport type UserData = {\r\n    id: number,\r\n    klasse_id: number,\r\n    schule_id: number,\r\n    is_teacher: boolean,\r\n    is_admin: boolean,\r\n    is_schooladmin: boolean,\r\n    locked: boolean,\r\n    username: string,\r\n    familienname: string,\r\n    rufname: string,\r\n    currentWorkspace_id?: number,\r\n    settings?: UserSettings,\r\n    password?: string,\r\n    is_testuser?: boolean,\r\n\r\n    vidis_sub?: string,\r\n    vidis_klasse?: string,\r\n    vidis_akronym?: string\r\n}\r\n\r\nexport function getUserDisplayName(user: {username: string, familienname: string, rufname: string}): string {\r\n    if(user.familienname?.length > 0 && user.rufname?.length > 0){\r\n        return user.rufname + \" \" + user.familienname;\r\n    }\r\n    return user.username;\r\n}\r\n\r\nexport type GetUserDataRequest = {\r\n\r\n}\r\n\r\nexport type GetUserDataResponse = {\r\n    success: boolean,\r\n    user: UserData,\r\n    classdata: ClassData[], // null if !is_teacher\r\n    schoolName: string\r\n}\r\n\r\nexport type GetSchoolDataRequest = {\r\n    school_id: number\r\n}\r\n\r\nexport type GetSchoolDataResponse = {\r\n    success: boolean,\r\n    schoolData?: SchoolData[]\r\n}\r\n\r\nexport type GetClassesDataRequest = {\r\n    school_id: number\r\n}\r\n\r\nexport type GetClassesDataResponse = {\r\n    success: boolean,\r\n    classDataList: ClassData[]\r\n}\r\n\r\nexport type GetTeacherDataRequest = {\r\n    school_id: number\r\n}\r\n\r\nexport type GetTeacherDataResponse = {\r\n    success: boolean,\r\n    teacherData?: TeacherData[],\r\n    classesWithoutTeacher: ClassData[]\r\n}\r\n\r\nexport type ClassData = {\r\n    id: number,\r\n    lehrkraft_id: number,\r\n    zweitlehrkraft_id: number,\r\n    schule_id: number,\r\n    name: string,\r\n    aktiv: boolean,\r\n    students: UserData[],\r\n    text?: string\r\n}\r\n\r\nexport type SchoolData = {\r\n    id: number,\r\n    name: string,\r\n    text?: string, // only form w2ui...\r\n    kuerzel: string,\r\n    classes: ClassData[],\r\n    usersWithoutClass: UserData[],\r\n    userMinutesLastMonth: number,\r\n    userMinutesLastYear: number,\r\n    userMinutesOverall: number\r\n}\r\n\r\nexport type TeacherData = {\r\n    userData: UserData,\r\n    classes: ClassData[]\r\n}\r\n\r\nexport type LoginRequest = {\r\n    username: string,\r\n    password: string,\r\n    singleUseToken: string | undefined\r\n}\r\n\r\nexport type LoginResponse = {\r\n    success: boolean,\r\n    user: UserData,\r\n    classdata: ClassData[], // null if !is_teacher\r\n    workspaces: Workspaces,\r\n    isTestuser: boolean,\r\n    activePruefung: Pruefung,\r\n    sqlIdeForOnlineIdeClient: string\r\n}\r\n\r\nexport type LogoutRequest = {\r\n    currentWorkspaceId: number\r\n}\r\n\r\nexport type LogoutResponse = {\r\n    success: boolean\r\n}\r\n\r\nexport type SendUpdatesRequest = {\r\n    workspacesWithoutFiles: WorkspaceData[],\r\n    files: FileData[],\r\n    owner_id: number,\r\n    userId: number,\r\n    currentWorkspaceId: number,\r\n    getModifiedWorkspaces: boolean\r\n}\r\n\r\nexport type SendUpdatesResponse = {\r\n    success: boolean,\r\n    workspaces: Workspaces,\r\n    filesToForceUpdate: FileData[],\r\n    activePruefung: Pruefung\r\n}\r\n\r\nexport type UpdateUserSettingsRequest = {\r\n    settings: UserSettings,\r\n    userId: number\r\n}\r\n\r\nexport type UpdateUserSettingsResponse = {\r\n    success: boolean;\r\n\r\n}\r\n\r\n\r\nexport type CreateOrDeleteFileOrWorkspaceRequest = {\r\n    entity: \"workspace\" | \"file\",\r\n    type: \"create\" | \"delete\",\r\n    data?: WorkspaceData | FileData, // in case of create\r\n    id?: number, // in case of delete\r\n    owner_id?: number, // in case of create\r\n    userId: number\r\n}\r\n\r\nexport type CRUDResponse = {\r\n    success: boolean,\r\n    id?: number, // in case of create\r\n    error: string\r\n}\r\n\r\nexport type CRUDUserRequest = {\r\n    type: \"create\" | \"update\" | \"delete\",\r\n    data?: UserData, // for create and update\r\n    ids?: number[], // for delete\r\n}\r\n\r\nexport type CRUDClassRequest = {\r\n    type: \"create\" | \"update\" | \"delete\",\r\n    data?: ClassData, // for create and update\r\n    ids?: number[], // for delete\r\n}\r\n\r\nexport type CRUDSchoolRequest = {\r\n    type: \"create\" | \"update\" | \"delete\",\r\n    data?: SchoolData, // for create and update\r\n    id?: number, // for delete\r\n}\r\n\r\nexport type BulkCreateUsersRequest = {\r\n    onlyCheckUsernames: boolean,\r\n    users: UserData[],\r\n    schule_id: number\r\n}\r\n\r\nexport type BulkCreateUsersResponse = {\r\n    success: boolean,\r\n    namesAlreadyUsed: string[],\r\n    message: string\r\n}\r\n\r\nexport type GetWorkspacesRequest = {\r\n    ws_userId: number,\r\n    userId: number\r\n}\r\n\r\nexport type GetWorkspacesResponse = {\r\n    success: boolean,\r\n    workspaces: Workspaces\r\n}\r\n\r\nexport type ChangeClassOfStudentsRequest = {\r\n    student_ids: number[],\r\n    new_class_id: number\r\n}\r\n\r\nexport type ChangeClassOfStudentsResponse = {\r\n    success: boolean,\r\n    message: string\r\n}\r\n\r\n\r\n/**\r\n * Copies Workspace and returns copy.\r\n */\r\nexport type DuplicateWorkspaceRequest = {\r\n    workspace_id: number // Workspace to copy\r\n}\r\n\r\nexport type DuplicateWorkspaceResponse = {\r\n    workspace: WorkspaceData, // new Workspace (with copied files)\r\n    message: string\r\n}\r\n\r\n/**\r\n * Creates Repository and links it with given workspace\r\n */\r\nexport type CreateRepositoryRequest = {\r\n    workspace_id: number, // Workspace to copy\r\n    publish_to: number // 0 == private, 1 == class, 2 == school\r\n}\r\n\r\nexport type CreateRepositoryResponse = {\r\n    message: string\r\n}\r\n\r\nexport type DeleteRepositoryRequest = {\r\n    repository_id: number\r\n}\r\n\r\nexport type DeleteRepositoryResponse = { success: boolean, message?: string };\r\n\r\n\r\n/**\r\n * Distributes given workspace to all students in given class\r\n */\r\nexport type DistributeWorkspaceRequest = {\r\n    workspace_id: number, // Workspace to copy\r\n    class_id: number,\r\n    student_ids: number[]\r\n}\r\n\r\nexport type DistributeWorkspaceResponse = {\r\n    message: string\r\n}\r\n\r\nexport type SetRepositorySecretRequest = {\r\n    repository_id: number,\r\n    newSecretRead: boolean,\r\n    newSecretWrite: boolean\r\n}\r\n\r\nexport type SetRepositorySecretResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    secret_read: string,\r\n    secret_write: string\r\n}\r\n\r\nexport type GetStatisticsRequest = {\r\n    now: boolean\r\n}\r\n\r\nexport type StatisticData = {\r\n    users: number,\r\n    memory: number,\r\n    time: string,\r\n    requestsPerMinute: number,\r\n    userlist?: string[],\r\n    webSocketSessionCount: number,\r\n    webSocketClientCount: number,\r\n    webSocketRequestPerSecond: number,\r\n    performanceDataList: PerformanceData[]\r\n}\r\n\r\nexport type PerformanceData = {\r\n    url: string;\r\n    sumTime: number;\r\n    count: number;\r\n}\r\n\r\nexport type CollectPerformanceDataRequest = {\r\n    data: PerformanceData[]\r\n}\r\n\r\nexport type GetStatisticsResponse = {\r\n    success: boolean,\r\n    statisticPeriodSeconds: number,\r\n    data: StatisticData[]\r\n}\r\n\r\nexport type RepositoryFileEntry = {\r\n    id: number,\r\n    version: number,\r\n    filename: string,\r\n    text: string\r\n}\r\n\r\nexport type RepositoryHistoryFileEntry = {\r\n    id: number,\r\n    version: number,\r\n    type: \"change\" | \"create\" | \"delete\" | \"intermediate\",\r\n    filename?: string, // if type == \"create\" || type == \"intermediate\" || type == \"change\" and filename has changed\r\n    content?: string, // if type == \"create\" || type == \"intermediate\"\r\n    changeSet?: string // if \"change\" and not only filename has changed\r\n}\r\n\r\nexport type RepositoryHistoryEntry = {\r\n    timestamp: string,\r\n    version: number,\r\n    userId: number,\r\n    username: string,\r\n    name: string,\r\n    comment: string,\r\n    isIntermediateEntry: boolean, // true, if entry contains complete code of all files\r\n    historyFiles: RepositoryHistoryFileEntry[]\r\n}\r\n\r\n\r\nexport type Repository = {\r\n    id: number,\r\n    name: string,\r\n    owner_id: number,\r\n    schule_id: number,\r\n    files: string,\r\n\r\n    fileEntries?: RepositoryFileEntry[], // deserialized field files\r\n\r\n    history: string,\r\n\r\n    historyEntries?: RepositoryHistoryEntry[],\r\n\r\n    version: number,\r\n    published_to: number,\r\n    description: string,\r\n\r\n    secret_read?: string,\r\n    secret_write?: string,\r\n\r\n    spritesheet_id: number\r\n\r\n}\r\n\r\n\r\nexport type GetRepositoryRequest = {\r\n    repository_id: number,\r\n    workspace_id: number\r\n}\r\n\r\nexport type GetRepositoryResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repository: Repository\r\n}\r\n\r\nexport type CommitFilesRequest = {\r\n    repository_id: number,\r\n    workspace_id: number,\r\n    repositoryHistoryEntry: RepositoryHistoryEntry,\r\n    files: RepositoryFileEntry[], // current state of workspace files\r\n    repositoryVersionBeforeCommit: number,\r\n    newlyVersionedFileIds: number[]\r\n}\r\n\r\nexport type CommitFilesResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repositoryOutOfSync: boolean,\r\n    repository: Repository\r\n};\r\n\r\nexport type RepositoryUser = {\r\n    user_id: number,\r\n    username: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    klasse: string,\r\n    canWrite: boolean\r\n}\r\n\r\nexport type GetRepositoryUserListRequest = {\r\n    repository_id: number\r\n}\r\n\r\nexport type GetRepositoryUserListResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repositoryUserList: RepositoryUser[]\r\n}\r\n\r\nexport type RepositoryInfo = {\r\n    id: number,\r\n    name: string,\r\n    owner_id: number,\r\n    owner_name: string,\r\n    owner_username: string,\r\n    schule_id: number,\r\n    klasse_id: number,\r\n    version: number,\r\n    published_to: number,\r\n    description: string,\r\n    secret_read?: string,\r\n    secret_write?: string\r\n}\r\n\r\nexport type GetRepositoryListRequest = {\r\n    onlyOwnRepositories: boolean\r\n}\r\n\r\nexport type GetRepositoryListResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    repositories: RepositoryInfo[]\r\n}\r\n\r\nexport type UpdateRepositoryRequest = {\r\n    repository_id: number,\r\n    owner_id: number,\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number,\r\n    description: string,\r\n    name: string\r\n}\r\n\r\nexport type UpdateRepositoryResponse = {\r\n    success: boolean,\r\n    message: string\r\n}\r\n\r\nexport type AttachWorkspaceToRepositoryRequest = {\r\n    createNewWorkspace: boolean,\r\n    workspace_id?: number,\r\n    repository_id: number,\r\n    secret?: string\r\n}\r\n\r\nexport type AttachWorkspaceToRepositoryResponse = { message?: string, new_workspace?: WorkspaceData };\r\n\r\nexport type RepositoryUserWriteAccessData = {\r\n    user_id: number,\r\n    has_write_access: boolean\r\n}\r\n\r\nexport type UpdateRepositoryUserWriteAccessRequest = {\r\n    repository_id: number,\r\n    writeAccessList: RepositoryUserWriteAccessData[]\r\n}\r\n\r\nexport type UpdateRepositoryUserWriteAccessResponse = { success: boolean, message: string }\r\n\r\nexport type GainRepositoryLockRequest = { repository_id: number }\r\n\r\nexport type GainRepositoryLockResponse = { success: boolean, message: string }\r\n\r\nexport type LeaseRepositoryLockRequest = { repository_id: number }\r\n\r\nexport type LeaseRepositoryLockResponse = { success: boolean, message: string }\r\n\r\n\r\n\r\n// WebSocket\r\n\r\nexport type GetWebSocketTokenResponse = { success: boolean, token?: string }\r\n\r\nexport type WebSocketRequestConnect = {\r\n    command: 1,\r\n    token: string,\r\n    nickname: string,\r\n    sessionCode: string\r\n}\r\n\r\nexport type WebSocketRequestSendToAll = {\r\n    command: 2,\r\n    data: string,\r\n    dataType: string\r\n}\r\n\r\nexport type WebSocketRequestSendToClient = {\r\n    command: 3,\r\n    recipient_id: number,\r\n    data: string,\r\n    dataType: string\r\n}\r\n\r\nexport type WebSocketRequestDisconnect = {\r\n    command: 4\r\n}\r\n\r\nexport type WebSocketRequestKeepAlive = {\r\n    command: 5\r\n}\r\n\r\nexport type WebSocketRequestFindPairing = {\r\n    command: 6,\r\n    count: number,\r\n    nicknames: string[]\r\n}\r\n\r\nexport type WebSocketResponse = WebSocketResponseMessage | WebSocketResponseNewClient |\r\n    WebSocketResponseOtherClientDisconnected | WebSocketResponseSynchro | WebSocketResponseKeepAlive |\r\n    WebSocketResponsePairingFound;\r\n\r\nexport type WebSocketResponseNewClient = {\r\n    command: 1,\r\n    user_id: number,\r\n    rufname: string,\r\n    familienname: string,\r\n    username: string,\r\n    nickname: string\r\n}\r\n\r\nexport type WebSocketResponseMessage = {\r\n    command: 2,\r\n    from_client_id: number,\r\n    data: string,\r\n    dataType: string\r\n}\r\n\r\nexport type WebSocketResponseOtherClientDisconnected = {\r\n    command: 3,\r\n    disconnecting_client_id: number\r\n}\r\n\r\nexport type WebSocketResponseSynchro = {\r\n    command: 4,\r\n    currentTimeMills: number,\r\n    client_id: number\r\n}\r\n\r\nexport type WebSocketResponseKeepAlive = {\r\n    command: 5\r\n}\r\n\r\nexport type PairingClient = {\r\n    id: number,\r\n    index: number\r\n}\r\n\r\nexport type WebSocketResponsePairingFound = {\r\n    command: 6,\r\n    clients: PairingClient[]\r\n}\r\n\r\nexport type GetMessagesRequest = {\r\n    type: string;\r\n}\r\n\r\nexport type Message = {\r\n    text: string,\r\n    type: string,\r\n    done: boolean,\r\n    time: number,\r\n    user_id: number\r\n}\r\n\r\nexport type GetMessagesResponse = {\r\n    success: boolean;\r\n    messages: Message[];\r\n}\r\n\r\nexport type ImportSchoolsResponse = {\r\n    success: boolean,\r\n    messageType: string\r\n}\r\n\r\n/**\r\n * Database\r\n */\r\n\r\nexport type GetTemplateRequest = {\r\n    token: string\r\n}\r\n\r\n\r\nexport type DatabaseData = {\r\n    id: number,\r\n    name: string,\r\n    based_on_template_id: number,\r\n    templateDump: Uint8Array,\r\n    statements: string[],\r\n    description: string,\r\n}\r\n\r\nexport type ObtainSqlTokenRequest = {\r\n    code: string\r\n}\r\n\r\nexport type ObtainSqlTokenResponse = {\r\n    success: boolean,\r\n    token: string,\r\n    message: string\r\n}\r\n\r\nexport type GetDatabaseRequest = {\r\n    token: string\r\n}\r\n\r\nexport type getDatabaseResponse = {\r\n    success: boolean,\r\n    database: DatabaseData,\r\n    version: number,\r\n    error: string\r\n}\r\n\r\n/**\r\n * Database WebSocket\r\n */\r\n\r\nexport type JAddStatementRequest = {\r\n    token: string,\r\n    version_before: number,\r\n    statements: string[]\r\n}\r\n\r\nexport type JAddStatementResponse = {\r\n    success: boolean,\r\n    statements_before: string[],\r\n    new_version: number,\r\n    message: string\r\n}\r\n\r\nexport type JRollbackStatementRequest = {\r\n    token: string,\r\n    current_version: number\r\n}\r\n\r\nexport type JRollbackStatementResponse = {\r\n    success: boolean,\r\n    message: string\r\n}\r\n\r\n/**\r\n * Messages from client to server\r\n */\r\nexport type JWebSocketMessageConnect = {\r\n    command: number; // == 1\r\n    token: string; // when \"connect\"\r\n    databaseVersion: number; // when \"getStatements\" or \"connect\"\r\n}\r\n\r\nexport type JWebSocketMessageGetStatements = {\r\n    command: number;\r\n    // 1 == \"connect\", 2 == \"getStatements\",\r\n    databaseVersion: number; // when \"getStatements\" or \"connect\"\r\n}\r\n\r\nexport type JWebSocketMessageExecuteStatement = {\r\n    command: number;\r\n    // 3 == \"executeStatement\"\r\n    version_before: number; // when \"executeStatement\"\r\n    statements: string[]; // when \"executeStatement\"\r\n}\r\n\r\nexport type JWebSocketMessageDisconnect = {\r\n    command: number;\r\n    // 4 == \"disconnect\" 5 == \"keepalive\"\r\n}\r\n\r\nexport type JWebSocketMessageKeepalive = {\r\n    command: number;\r\n    // 4 == \"disconnect\" 5 == \"keepalive\"\r\n}\r\n\r\n\r\n/**\r\n * Messages from server\r\n */\r\nexport type JMessageFromServer = SendingStatementsMessageFromServer | DisconnectMessageFromServer | KeepAliveMessageFromServer;\r\n\r\nexport type SendingStatementsMessageFromServer = {\r\n    command: number; // == 2,\r\n    firstNewStatementIndex: number,\r\n    newStatements: string[]\r\n}\r\n\r\nexport type DisconnectMessageFromServer = {\r\n    command: number; // == 3\r\n}\r\n\r\nexport type KeepAliveMessageFromServer = {\r\n    command: number; // == 4\r\n}\r\n\r\n\r\n/**\r\n * Long polling database listener\r\n */\r\nexport type DatabaseLongPollingListenerRequest = {\r\n    token: string,\r\n    listenerIdentifier: number\r\n}\r\n\r\nexport type LongPollingListenerResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    firstNewStatementIndex: number,\r\n    newStatements: string[],\r\n    rollbackToVersion: number\r\n}\r\n\r\nexport type UploadSpriteResponse = {\r\n    success: boolean,\r\n    message: string,\r\n    spriteFileId: number\r\n}\r\n\r\nexport type PruefungState = \"preparing\" | \"running\" | \"correcting\" | \"opening\";\r\nexport var PruefungCaptions: {[index: string]: string} = {\r\n    \"preparing\": \"Vorbereitung\",\r\n    \"running\": \"Prüfung läuft\",\r\n    \"correcting\": \"Korrektur\",\r\n    \"opening\": \"Herausgabe\"\r\n}\r\n\r\nexport type Pruefung = {\r\n    id: number,\r\n    name: string,\r\n    datum?: string,\r\n    klasse_id: number,\r\n    template_workspace_id: number,\r\n    state: PruefungState;\r\n}\r\n\r\nexport type CRUDPruefungRequest = {\r\n    pruefung?: Pruefung,\r\n    requestType: \"create\" | \"update\" | \"delete\"\r\n}\r\n\r\nexport type CRUDPruefungResponse = {\r\n    success: boolean,\r\n    newPruefungWithIds?: Pruefung,\r\n    message: string\r\n}\r\n\r\n\r\n\r\nexport type StudentPruefungStateInfo = {\r\n    timestamp: number,\r\n    state: string,\r\n    running: boolean\r\n} \r\n\r\nexport type GetPruefungStudentStatesRequest = {\r\n    pruefungId: number\r\n}\r\n\r\nexport type GetPruefungStudentStatesResponse = {\r\n    success: boolean,\r\n    pruefungState: string,\r\n    pruefungStudentStates: {[id: number]: StudentPruefungStateInfo},\r\n    message: string\r\n}\r\n\r\n\r\n// data class ReportPruefungStudentStateRequest(var pruefungId: Int, var clientState: String);\r\n// data class ReportPruefungStudentStateResponse(var success: Boolean, var pruefungState: String, var message: String);\r\n\r\nexport type ReportPruefungStudentStateRequest = {\r\n    pruefungId: number,\r\n    clientState: String,\r\n    running: Boolean\r\n}\r\n\r\nexport type ReportPruefungStudentStateResponse = {\r\n    success: boolean,\r\n    pruefungState: string,\r\n    message: string\r\n}\r\n\r\nexport type KlassData = {\r\n    id: number;\r\n    text: string;\r\n}\r\n\r\nexport type WorkspaceShortData = {\r\n    id: number, \r\n    path: string,\r\n    name: string, \r\n    text?: string,\r\n    files: string[]\r\n}\r\n\r\nexport type GetPruefungenForLehrkraftResponse = {\r\n    pruefungen: Pruefung[];\r\n    klassen: KlassData[];    \r\n    workspaces: WorkspaceShortData[];\r\n}\r\n\r\nexport type UpdatePruefungSchuelerDataRequest = {\r\n    schuelerId: number;\r\n    pruefungId: number;\r\n    grade: string;\r\n    points: string;\r\n    attended_exam: boolean;\r\n    attributesToUpdate: string;\r\n}\r\n\r\nexport type VidisNewUserRequest = {\r\n    singleUseToken: string,\r\n    username: string | null,\r\n    password: string | null,\r\n\r\n    // alternative:\r\n    nickname: string | null,\r\n    klasse: string | null;\r\n}\r\n\r\n","import { ajax } from \"../communication/AjaxHelper\";\r\nimport { LogoutRequest } from \"../communication/Data\";\r\nimport { Login } from \"./Login\";\r\n\r\nexport class AutoLogout {\r\n\r\n    logoutAfterMinutes: number = 20;\r\n    counterInMinutes: number = this.logoutAfterMinutes;\r\n\r\n    constructor(login?: Login) {\r\n        let that = this;\r\n        setInterval(() => {\r\n            that.counterInMinutes--;\r\n            if (that.counterInMinutes == 0) {\r\n                if (login) {\r\n                    login.logout();\r\n                } else {\r\n                    that.logout();\r\n                }\r\n            }\r\n        }, 60 * 1000);\r\n\r\n        document.body.addEventListener(\"keydown\", () => {\r\n            that.reset();\r\n        });\r\n\r\n        document.body.addEventListener(\"mousedown\", () => {\r\n            that.reset();\r\n        })\r\n\r\n    }\r\n\r\n    reset() {\r\n        this.counterInMinutes = this.logoutAfterMinutes;\r\n    }\r\n    \r\n    \r\n    logout() {\r\n        let logoutRequest: LogoutRequest = {\r\n            currentWorkspaceId: null\r\n        }\r\n\r\n        ajax('logout', logoutRequest, () => {\r\n            window.location.href = 'index.html';\r\n        });\r\n\r\n    }\r\n\r\n}"],"names":["getUserDisplayName","user","_a","_b","PruefungCaptions","AutoLogout","login","__publicField","that","ajax"],"mappings":"qNA2GO,SAASA,EAAmBC,EAAyE,SACxG,QAAGC,EAAAD,EAAK,eAAL,YAAAC,EAAmB,QAAS,KAAKC,EAAAF,EAAK,UAAL,YAAAE,EAAc,QAAS,EAChDF,EAAK,QAAU,IAAMA,EAAK,aAE9BA,EAAK,QAChB,CAmrBO,IAAIG,EAA8C,CACrD,UAAa,eACb,QAAW,gBACX,WAAc,YACd,QAAW,YACf,ECpyBO,MAAMC,CAAW,CAKpB,YAAYC,EAAe,CAH3BC,EAAA,0BAA6B,IAC7BA,EAAA,wBAA2B,KAAK,oBAG5B,IAAIC,EAAO,KACX,YAAY,IAAM,CACTA,EAAA,mBACDA,EAAK,kBAAoB,IACrBF,EACAA,EAAM,OAAO,EAEbE,EAAK,OAAO,EAEpB,EACD,GAAK,GAAI,EAEH,SAAA,KAAK,iBAAiB,UAAW,IAAM,CAC5CA,EAAK,MAAM,CAAA,CACd,EAEQ,SAAA,KAAK,iBAAiB,YAAa,IAAM,CAC9CA,EAAK,MAAM,CAAA,CACd,CAEL,CAEA,OAAQ,CACJ,KAAK,iBAAmB,KAAK,kBACjC,CAGA,QAAS,CAKAC,EAAA,SAJ8B,CAC/B,mBAAoB,IAAA,EAGM,IAAM,CAChC,OAAO,SAAS,KAAO,YAAA,CAC1B,CAEL,CAEJ"}